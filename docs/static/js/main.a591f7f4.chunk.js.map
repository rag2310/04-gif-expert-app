{"version":3,"sources":["components/AddCartegory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCartegory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","repuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAiB/C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCShBG,EAjBF,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAENC,EAFM,iDAE0CC,UAAUR,GAFpD,+DAGWS,MAAMF,GAHjB,cAGNG,EAHM,gBAIWA,EAASC,OAJpB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDCEAO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZR,mBACtB,CACIoB,KAAM,GACNa,SAAS,IALqB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAVAC,qBAAU,WACNvB,EAAQL,GACH6B,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACzB,IAEG0B,EDjB6BK,CAAa/B,GAAnCgC,EAFuB,EAE7BpB,KAAgBa,EAFa,EAEbA,QAExB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDrB,IAElDyB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQW,EAASlB,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEetBiB,EA5BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAEQ2C,EAAWpB,KAAI,SAAAd,GACX,OAEI,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCdrCmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a591f7f4.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCartegory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(category => [inputValue, ...category]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCartegory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=xFSaiCheUf85ETLrCaogqeRJsWUYPas1`;\n    const repuesta = await fetch(url);\n    const { data } = await repuesta.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    });\n\n    return gifs;\n}\n\nexport default getGifs;","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: imagenes, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"card-grip\">\n                {\n                    imagenes.map((img) =>\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />)\n                }\n            </div>\n        </>\n    );\n}\n","import { useEffect, useState } from \"react\"\nimport getGifs from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState(\n        {\n            data: [],\n            loading: true\n        }\n    )\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, [category]);\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCartegory } from './components/AddCartegory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCartegory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => {\n                        return (\n\n                            <GifGrid\n                                key={category}\n                                category={category}\n                            />\n                        );\n                    })\n                }\n            </ol>\n        </>\n    );\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}